// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class DataScript : MonoBehaviour
{
	public TextAsset file;

	private string[] statArray = new string[4];


	void Start()
	{
		Load (file);

		/*print (Find_id("5").rfood);
		print (Find_id("5").rdur);
		print (Find_id("5").rcon);
		print (Find_id("5").rmrf);
		print (Find_id("5").rf);*/

		statArray [0] = Find_id ("5").rfood;
		//statArray [1] = Find_id ("5").rdur;
		//statArray [2] = Find_id ("5").rcon;
		//statArray [3] = Find_id ("5").rmrf;
		//statArray [4] = Find_id ("5").rf;

		print (statArray [0]);
		//print (statArray [1]);
		//print (statArray [2]);
		//print (statArray [3]);
		//print (statArray [4]);

	}

	public class Row
	{
		public string id;
		public string rfood;
		public string rdur;
		public string rcon;
		public string rmrf;
		public string rf;
		
	}
	
	List<Row> rowList = new List<Row>();
	bool isLoaded = false;
	
	public bool IsLoaded()
	{
		return isLoaded;
	}
	
	public List<Row> GetRowList()
	{
		return rowList;
	}
	
	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.id = grid[i][0];
			row.rfood = grid[i][1];
			row.rdur = grid[i][2];
			row.rcon = grid[i][3];
			row.rmrf = grid[i][4];
			row.rf = grid[i][5];
			
			rowList.Add(row);
		}
		isLoaded = true;
	}
	
	/*public int NumRows()
	{
		return rowList.Count;
		float.TryParse(
	}*/
	
	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}
	
	public Row Find_id(string find)
	{
		return rowList.Find(x => x.id == find);
	}
	public List<Row> FindAll_id(string find)
	{
		return rowList.FindAll(x => x.id == find);
	}
	public Row Find_rfood(string find)
	{
		return rowList.Find(x => x.rfood == find);
	}
	public List<Row> FindAll_rfood(string find)
	{
		return rowList.FindAll(x => x.rfood == find);
	}
	public Row Find_rdur(string find)
	{
		return rowList.Find(x => x.rdur == find);
	}
	public List<Row> FindAll_rdur(string find)
	{
		return rowList.FindAll(x => x.rdur == find);
	}
	public Row Find_rcon(string find)
	{
		return rowList.Find(x => x.rcon == find);
	}
	public List<Row> FindAll_rcon(string find)
	{
		return rowList.FindAll(x => x.rcon == find);
	}
	public Row Find_rmrf(string find)
	{
		return rowList.Find(x => x.rmrf == find);
	}
	public List<Row> FindAll_rmrf(string find)
	{
		return rowList.FindAll(x => x.rmrf == find);
	}
	public Row Find_rf(string find)
	{
		return rowList.Find(x => x.rf == find);
	}
	public List<Row> FindAll_rf(string find)
	{
		return rowList.FindAll(x => x.rf == find);
	}
	
}